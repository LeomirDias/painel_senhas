{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkspacesReis\\\\painel_senhas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logoReis.png';\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [generalQueue, setGeneralQueue] = useState([]);\n  const [preferentialQueue, setPreferentialQueue] = useState([]);\n  const [currentPassword, setCurrentPassword] = useState(\"000\");\n  const [nextGeneralPassword, setNextGeneralPassword] = useState(\"G000\");\n  const [nextPreferentialPassword, setNextPreferentialPassword] = useState(\"P000\");\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [fullScreenPassword, setFullScreenPassword] = useState(\"\");\n  const apiUrl = \"http://localhost:3001/api\"; // Ajuste conforme necessário\n\n  // Função para buscar o estado das filas do servidor\n  const fetchQueues = useCallback(async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/status`);\n      const {\n        generalQueue,\n        preferentialQueue,\n        currentPassword\n      } = response.data;\n      setGeneralQueue(generalQueue);\n      setPreferentialQueue(preferentialQueue);\n      setCurrentPassword(currentPassword);\n      setNextGeneralPassword(generalQueue.length > 0 ? `G${generalQueue[0]}` : \"G000\");\n      setNextPreferentialPassword(preferentialQueue.length > 0 ? `P${preferentialQueue[0]}` : \"P000\");\n    } catch (error) {\n      console.error(\"Erro ao buscar o estado das filas:\", error);\n    }\n  }, [apiUrl]);\n\n  // Função para chamar a próxima senha\n  const callNextPassword = useCallback(async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/next`);\n      const {\n        password\n      } = response.data;\n      setFullScreenPassword(password);\n      setIsFullScreen(true);\n      setTimeout(() => {\n        setCurrentPassword(password);\n        fetchQueues(); // Atualiza as filas após chamar a senha\n        setIsFullScreen(false);\n      }, 3000);\n    } catch (error) {\n      console.error(\"Erro ao chamar a próxima senha:\", error);\n    }\n  }, [apiUrl, fetchQueues]);\n\n  // Função para chamar uma senha preferencial\n  const callPreferentialPassword = useCallback(async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/preferential`);\n      const {\n        password\n      } = response.data;\n      setFullScreenPassword(password);\n      setIsFullScreen(true);\n      setTimeout(() => {\n        setCurrentPassword(password);\n        fetchQueues(); // Atualiza as filas após chamar a senha\n        setIsFullScreen(false);\n      }, 3000);\n    } catch (error) {\n      console.error(\"Erro ao chamar a senha preferencial:\", error);\n    }\n  }, [apiUrl, fetchQueues]);\n\n  // Função para chamar uma senha comum\n  const callGeneralPassword = useCallback(async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/general`);\n      const {\n        password\n      } = response.data;\n      setFullScreenPassword(password);\n      setIsFullScreen(true);\n      setTimeout(() => {\n        setCurrentPassword(password);\n        fetchQueues(); // Atualiza as filas após chamar a senha\n        setIsFullScreen(false);\n      }, 3000);\n    } catch (error) {\n      console.error(\"Erro ao chamar a senha comum:\", error);\n    }\n  }, [apiUrl, fetchQueues]);\n\n  // Função para resetar as filas no backend\n  const resetData = async () => {\n    try {\n      await axios.post(`${apiUrl}/reset`);\n      fetchQueues(); // Atualiza as filas após o reset\n    } catch (error) {\n      console.error(\"Erro ao resetar os dados:\", error);\n    }\n  };\n\n  // UseEffect para buscar o estado inicial das filas\n  useEffect(() => {\n    fetchQueues();\n  }, [fetchQueues]);\n\n  // Detecta pressionamento de teclas\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (event.key === \"c\") {\n        callNextPassword();\n      } else if (event.key === \"p\") {\n        callPreferentialPassword();\n      } else if (event.key === \"g\") {\n        callGeneralPassword();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [callNextPassword, callPreferentialPassword, callGeneralPassword]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container-senhas\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo Reis\",\n          id: \"sidebar__logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"container-current\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label\",\n            children: \"SUA VEZ!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password\",\n            id: \"current-password\",\n            children: currentPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bottom-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"PR\\xD3XIMAS SENHAS:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-containers\",\n          id: \"container-general\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-label\",\n            children: \"GERAL -\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-password\",\n            id: \"next-general\",\n            children: nextGeneralPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-containers\",\n          id: \"container-preferential\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-label\",\n            children: \"PREFERENCIAL -\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom-password\",\n            id: \"next-preferential\",\n            children: nextPreferentialPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"lqp/btDoTFgBEZH+auZ1bnnIVBA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","generalQueue","setGeneralQueue","preferentialQueue","setPreferentialQueue","currentPassword","setCurrentPassword","nextGeneralPassword","setNextGeneralPassword","nextPreferentialPassword","setNextPreferentialPassword","isFullScreen","setIsFullScreen","fullScreenPassword","setFullScreenPassword","apiUrl","fetchQueues","response","get","data","length","error","console","callNextPassword","password","setTimeout","callPreferentialPassword","callGeneralPassword","resetData","post","handleKeyPress","event","key","window","addEventListener","removeEventListener","children","id","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/WorkspacesReis/painel_senhas/src/App.js"],"sourcesContent":["import logo from './logoReis.png';\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [generalQueue, setGeneralQueue] = useState([]);\n  const [preferentialQueue, setPreferentialQueue] = useState([]);\n  const [currentPassword, setCurrentPassword] = useState(\"000\");\n  const [nextGeneralPassword, setNextGeneralPassword] = useState(\"G000\");\n  const [nextPreferentialPassword, setNextPreferentialPassword] = useState(\"P000\");\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [fullScreenPassword, setFullScreenPassword] = useState(\"\");\n\n  const apiUrl = \"http://localhost:3001/api\"; // Ajuste conforme necessário\n\n  // Função para buscar o estado das filas do servidor\n  const fetchQueues = useCallback(async () => {\n      try {\n          const response = await axios.get(`${apiUrl}/status`);\n          const { generalQueue, preferentialQueue, currentPassword } = response.data;\n\n          setGeneralQueue(generalQueue);\n          setPreferentialQueue(preferentialQueue);\n          setCurrentPassword(currentPassword);\n\n          setNextGeneralPassword(generalQueue.length > 0 ? `G${generalQueue[0]}` : \"G000\");\n          setNextPreferentialPassword(preferentialQueue.length > 0 ? `P${preferentialQueue[0]}` : \"P000\");\n      } catch (error) {\n          console.error(\"Erro ao buscar o estado das filas:\", error);\n      }\n  }, [apiUrl]);\n\n  // Função para chamar a próxima senha\n  const callNextPassword = useCallback(async () => {\n      try {\n          const response = await axios.get(`${apiUrl}/next`);\n          const { password } = response.data;\n\n          setFullScreenPassword(password);\n          setIsFullScreen(true);\n\n          setTimeout(() => {\n              setCurrentPassword(password);\n              fetchQueues(); // Atualiza as filas após chamar a senha\n              setIsFullScreen(false);\n          }, 3000);\n      } catch (error) {\n          console.error(\"Erro ao chamar a próxima senha:\", error);\n      }\n  }, [apiUrl, fetchQueues]);\n\n  // Função para chamar uma senha preferencial\n  const callPreferentialPassword = useCallback(async () => {\n      try {\n          const response = await axios.get(`${apiUrl}/preferential`);\n          const { password } = response.data;\n\n          setFullScreenPassword(password);\n          setIsFullScreen(true);\n\n          setTimeout(() => {\n              setCurrentPassword(password);\n              fetchQueues(); // Atualiza as filas após chamar a senha\n              setIsFullScreen(false);\n          }, 3000);\n      } catch (error) {\n          console.error(\"Erro ao chamar a senha preferencial:\", error);\n      }\n  }, [apiUrl, fetchQueues]);\n\n  // Função para chamar uma senha comum\n  const callGeneralPassword = useCallback(async () => {\n      try {\n          const response = await axios.get(`${apiUrl}/general`);\n          const { password } = response.data;\n\n          setFullScreenPassword(password);\n          setIsFullScreen(true);\n\n          setTimeout(() => {\n              setCurrentPassword(password);\n              fetchQueues(); // Atualiza as filas após chamar a senha\n              setIsFullScreen(false);\n          }, 3000);\n      } catch (error) {\n          console.error(\"Erro ao chamar a senha comum:\", error);\n      }\n  }, [apiUrl, fetchQueues]);\n\n  // Função para resetar as filas no backend\n  const resetData = async () => {\n      try {\n          await axios.post(`${apiUrl}/reset`);\n          fetchQueues(); // Atualiza as filas após o reset\n      } catch (error) {\n          console.error(\"Erro ao resetar os dados:\", error);\n      }\n  };\n\n  // UseEffect para buscar o estado inicial das filas\n  useEffect(() => {\n      fetchQueues();\n  }, [fetchQueues]);\n\n  // Detecta pressionamento de teclas\n  useEffect(() => {\n      const handleKeyPress = (event) => {\n          if (event.key === \"c\") {\n              callNextPassword();\n          } else if (event.key === \"p\") {\n              callPreferentialPassword();\n          } else if (event.key === \"g\") {\n              callGeneralPassword();\n          }\n      };\n\n      window.addEventListener(\"keydown\", handleKeyPress);\n      return () => {\n          window.removeEventListener(\"keydown\", handleKeyPress);\n      };\n  }, [callNextPassword, callPreferentialPassword, callGeneralPassword]);\n\n  return (\n    <>\n      <main id=\"sidebar\">\n        <div id=\"container-senhas\">\n          <img src={logo} alt=\"Logo Reis\" id='sidebar__logo' />\n          <div id=\"container-current\">\n            <div className=\"label\">SUA VEZ!</div>\n            <div className=\"password\" id=\"current-password\">{currentPassword}</div>\n          </div>\n        </div>\n\n        <div id=\"bottom-section\">\n          <h1>PRÓXIMAS SENHAS:</h1>\n          <div className=\"bottom-containers\" id=\"container-general\">\n            <div className=\"bottom-label\">GERAL -</div>\n            <div className=\"bottom-password\" id=\"next-general\">{nextGeneralPassword}</div>\n          </div>\n\n          <div className=\"bottom-containers\" id=\"container-preferential\">\n            <div className=\"bottom-label\">PREFERENCIAL -</div>\n            <div className=\"bottom-password\" id=\"next-preferential\">{nextPreferentialPassword}</div>\n          </div>\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}