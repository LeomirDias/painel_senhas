{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkspacesReis\\\\painel_senhas\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logoReis.png';\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [generalQueue, setGeneralQueue] = useState([]);\n  const [preferentialQueue, setPreferentialQueue] = useState([]);\n  const [currentPassword, setCurrentPassword] = useState(\"000\");\n  const [nextGeneralPassword, setNextGeneralPassword] = useState(\"G000\");\n  const [nextPreferentialPassword, setNextPreferentialPassword] = useState(\"P000\");\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [fullScreenPassword, setFullScreenPassword] = useState(\"\");\n  const apiUrl = process.env.REACT_APP_API_URL;\n\n  // Função para buscar o estado das filas\n  const fetchQueues = useCallback(async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/status`);\n      const {\n        generalQueue,\n        preferentialQueue,\n        currentPassword\n      } = response.data;\n      setGeneralQueue(generalQueue);\n      setPreferentialQueue(preferentialQueue);\n      setCurrentPassword(currentPassword);\n      setNextGeneralPassword(generalQueue.length > 0 ? `G${generalQueue[0]}` : \"G000\");\n      setNextPreferentialPassword(preferentialQueue.length > 0 ? `P${preferentialQueue[0]}` : \"P000\");\n    } catch (error) {\n      console.error(\"Erro ao buscar o estado das filas:\", error);\n    }\n  }, [apiUrl]);\n  const addPreferentialPassword = useCallback(async () => {\n    try {\n      await axios.post(`${apiUrl}/add-preferential`);\n      fetchQueues(); // Atualiza as filas\n    } catch (error) {\n      console.error(\"Erro ao adicionar senha preferencial:\", error);\n    }\n  }, [apiUrl, fetchQueues]);\n  const addGeneralPassword = useCallback(async () => {\n    try {\n      await axios.post(`${apiUrl}/add-general`);\n      fetchQueues(); // Atualiza as filas\n    } catch (error) {\n      console.error(\"Erro ao adicionar senha geral:\", error);\n    }\n  }, [apiUrl, fetchQueues]);\n\n  // Função para chamar as senhas alternadamente entre 1 geral e 2 preferenciais\n  const callNextPassword = useCallback(async () => {\n    try {\n      // Consulta as filas antes de iniciar o processo\n      await fetchQueues();\n      let passwordsCalled = 0; // Contador de senhas chamadas\n      const totalPasswordsToCall = 3; // Número total de senhas a serem chamadas\n\n      // Continue chamando senhas até atingir o total desejado\n      while (passwordsCalled < totalPasswordsToCall) {\n        // 1ª Senha Geral\n        if (generalQueue.length > 0 && passwordsCalled === 0) {\n          const generalPassword = generalQueue[0]; // Pega a primeira senha da fila geral\n          const response = await axios.get(`${apiUrl}/next?password=${generalPassword}`);\n          setFullScreenPassword(response.data.password);\n          setIsFullScreen(true);\n          setCurrentPassword(response.data.password);\n\n          // Após exibir a senha, remove automaticamente da fila\n          setGeneralQueue(prev => prev.slice(1)); // Remove a senha geral chamada\n          setIsFullScreen(false);\n          passwordsCalled += 1;\n        }\n        // 1ª Senha Preferencial\n        else if (preferentialQueue.length > 0 && passwordsCalled === 1) {\n          const preferentialPassword = preferentialQueue[0]; // Pega a primeira senha da fila preferencial\n          const response = await axios.get(`${apiUrl}/next?password=${preferentialPassword}`);\n          setFullScreenPassword(response.data.password);\n          setIsFullScreen(true);\n          setCurrentPassword(response.data.password);\n\n          // Após exibir a senha, remove automaticamente da fila\n          setPreferentialQueue(prev => prev.slice(1)); // Remove a senha preferencial chamada\n          setIsFullScreen(false);\n          passwordsCalled += 1;\n        }\n        // 2ª Senha Preferencial\n        else if (preferentialQueue.length > 0 && passwordsCalled === 2) {\n          const preferentialPassword = preferentialQueue[0]; // Pega a próxima senha preferencial\n          const response = await axios.get(`${apiUrl}/next?password=${preferentialPassword}`);\n          setFullScreenPassword(response.data.password);\n          setIsFullScreen(true);\n          setCurrentPassword(response.data.password);\n\n          // Após exibir a senha, remove automaticamente da fila\n          setPreferentialQueue(prev => prev.slice(1)); // Remove a senha preferencial chamada\n          setIsFullScreen(false);\n          passwordsCalled += 1;\n        }\n\n        // Atualiza as filas no final de cada iteração\n        await fetchQueues();\n      }\n    } catch (error) {\n      console.error(\"Erro ao chamar a próxima senha:\", error);\n    }\n  }, [apiUrl, preferentialQueue, generalQueue, fetchQueues]);\n\n  // Reset das filas\n  const resetQueues = useCallback(async () => {\n    try {\n      const response = await axios.post(`${apiUrl}/reset`);\n      console.log(response.data.message); // Exibe a resposta no console\n      fetchQueues(); // Atualiza as filas após resetar\n    } catch (error) {\n      console.error(\"Erro ao resetar as filas:\", error);\n    }\n  }, [apiUrl, fetchQueues]);\n  useEffect(() => {\n    fetchQueues();\n  }, [fetchQueues]);\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (event.key === \"p\") {\n        addPreferentialPassword(); // Adiciona uma senha preferencial\n      } else if (event.key === \"g\") {\n        addGeneralPassword(); // Adiciona uma senha geral\n      } else if (event.key === \"c\") {\n        callNextPassword(); // Chama a próxima senha e automaticamente a remove da fila\n      } else if (event.key === \"r\") {\n        resetQueues(); // Reseta as filas\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [addPreferentialPassword, addGeneralPassword, callNextPassword, resetQueues]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container-senhas\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo Reis\",\n        id: \"sidebar__logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container-current\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label\",\n          children: \"SUA VEZ!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password\",\n          id: \"current-password\",\n          children: currentPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bottom-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PR\\xD3XIMAS SENHAS:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-containers\",\n        id: \"container-general\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-label\",\n          children: \"GERAL -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-password\",\n          id: \"next-general\",\n          children: nextGeneralPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-containers\",\n        id: \"container-preferential\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-label\",\n          children: \"PREFERENCIAL -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-password\",\n          id: \"next-preferential\",\n          children: nextPreferentialPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"603COsXuXBU0qB1bT6zaix+JNlg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","App","_s","generalQueue","setGeneralQueue","preferentialQueue","setPreferentialQueue","currentPassword","setCurrentPassword","nextGeneralPassword","setNextGeneralPassword","nextPreferentialPassword","setNextPreferentialPassword","isFullScreen","setIsFullScreen","fullScreenPassword","setFullScreenPassword","apiUrl","process","env","REACT_APP_API_URL","fetchQueues","response","get","data","length","error","console","addPreferentialPassword","post","addGeneralPassword","callNextPassword","passwordsCalled","totalPasswordsToCall","generalPassword","password","prev","slice","preferentialPassword","resetQueues","log","message","handleKeyPress","event","key","window","addEventListener","removeEventListener","id","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/WorkspacesReis/painel_senhas/client/src/App.js"],"sourcesContent":["import logo from './logoReis.png';\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n    const [generalQueue, setGeneralQueue] = useState([]);\n    const [preferentialQueue, setPreferentialQueue] = useState([]);\n    const [currentPassword, setCurrentPassword] = useState(\"000\");\n    const [nextGeneralPassword, setNextGeneralPassword] = useState(\"G000\");\n    const [nextPreferentialPassword, setNextPreferentialPassword] = useState(\"P000\");\n    const [isFullScreen, setIsFullScreen] = useState(false);\n    const [fullScreenPassword, setFullScreenPassword] = useState(\"\");\n\n    const apiUrl = process.env.REACT_APP_API_URL;\n\n    // Função para buscar o estado das filas\n    const fetchQueues = useCallback(async () => {\n        try {\n            const response = await axios.get(`${apiUrl}/status`);\n            const { generalQueue, preferentialQueue, currentPassword } = response.data;\n\n            setGeneralQueue(generalQueue);\n            setPreferentialQueue(preferentialQueue);\n            setCurrentPassword(currentPassword);\n\n            setNextGeneralPassword(generalQueue.length > 0 ? `G${generalQueue[0]}` : \"G000\");\n            setNextPreferentialPassword(preferentialQueue.length > 0 ? `P${preferentialQueue[0]}` : \"P000\");\n        } catch (error) {\n            console.error(\"Erro ao buscar o estado das filas:\", error);\n        }\n    }, [apiUrl]);\n\n    const addPreferentialPassword = useCallback(async () => {\n        try {\n            await axios.post(`${apiUrl}/add-preferential`);\n            fetchQueues(); // Atualiza as filas\n        } catch (error) {\n            console.error(\"Erro ao adicionar senha preferencial:\", error);\n        }\n    }, [apiUrl, fetchQueues]);\n\n    const addGeneralPassword = useCallback(async () => {\n        try {\n            await axios.post(`${apiUrl}/add-general`);\n            fetchQueues(); // Atualiza as filas\n        } catch (error) {\n            console.error(\"Erro ao adicionar senha geral:\", error);\n        }\n    }, [apiUrl, fetchQueues]);\n\n    // Função para chamar as senhas alternadamente entre 1 geral e 2 preferenciais\n    const callNextPassword = useCallback(async () => {\n        try {\n            // Consulta as filas antes de iniciar o processo\n            await fetchQueues();\n\n            let passwordsCalled = 0; // Contador de senhas chamadas\n            const totalPasswordsToCall = 3; // Número total de senhas a serem chamadas\n\n            // Continue chamando senhas até atingir o total desejado\n            while (passwordsCalled < totalPasswordsToCall) {\n                // 1ª Senha Geral\n                if (generalQueue.length > 0 && passwordsCalled === 0) {\n                    const generalPassword = generalQueue[0]; // Pega a primeira senha da fila geral\n                    const response = await axios.get(`${apiUrl}/next?password=${generalPassword}`);\n                    setFullScreenPassword(response.data.password);\n                    setIsFullScreen(true);\n                    setCurrentPassword(response.data.password);\n\n                    // Após exibir a senha, remove automaticamente da fila\n                    setGeneralQueue((prev) => prev.slice(1)); // Remove a senha geral chamada\n                    setIsFullScreen(false);\n                    passwordsCalled += 1;\n                }\n                // 1ª Senha Preferencial\n                else if (preferentialQueue.length > 0 && passwordsCalled === 1) {\n                    const preferentialPassword = preferentialQueue[0]; // Pega a primeira senha da fila preferencial\n                    const response = await axios.get(`${apiUrl}/next?password=${preferentialPassword}`);\n                    setFullScreenPassword(response.data.password);\n                    setIsFullScreen(true);\n                    setCurrentPassword(response.data.password);\n\n                    // Após exibir a senha, remove automaticamente da fila\n                    setPreferentialQueue((prev) => prev.slice(1)); // Remove a senha preferencial chamada\n                    setIsFullScreen(false);\n                    passwordsCalled += 1;\n                }\n                // 2ª Senha Preferencial\n                else if (preferentialQueue.length > 0 && passwordsCalled === 2) {\n                    const preferentialPassword = preferentialQueue[0]; // Pega a próxima senha preferencial\n                    const response = await axios.get(`${apiUrl}/next?password=${preferentialPassword}`);\n                    setFullScreenPassword(response.data.password);\n                    setIsFullScreen(true);\n                    setCurrentPassword(response.data.password);\n\n                    // Após exibir a senha, remove automaticamente da fila\n                    setPreferentialQueue((prev) => prev.slice(1)); // Remove a senha preferencial chamada\n                    setIsFullScreen(false);\n                    passwordsCalled += 1;\n                }\n\n                // Atualiza as filas no final de cada iteração\n                await fetchQueues();\n            }\n        } catch (error) {\n            console.error(\"Erro ao chamar a próxima senha:\", error);\n        }\n    }, [apiUrl, preferentialQueue, generalQueue, fetchQueues]);\n\n    // Reset das filas\n    const resetQueues = useCallback(async () => {\n        try {\n            const response = await axios.post(`${apiUrl}/reset`);\n            console.log(response.data.message); // Exibe a resposta no console\n            fetchQueues(); // Atualiza as filas após resetar\n        } catch (error) {\n            console.error(\"Erro ao resetar as filas:\", error);\n        }\n    }, [apiUrl, fetchQueues]);\n\n    useEffect(() => {\n        fetchQueues();\n    }, [fetchQueues]);\n\n    useEffect(() => {\n        const handleKeyPress = (event) => {\n            if (event.key === \"p\") {\n                addPreferentialPassword(); // Adiciona uma senha preferencial\n            } else if (event.key === \"g\") {\n                addGeneralPassword(); // Adiciona uma senha geral\n            } else if (event.key === \"c\") {\n                callNextPassword(); // Chama a próxima senha e automaticamente a remove da fila\n            } else if (event.key === \"r\") {\n                resetQueues(); // Reseta as filas\n            }\n        };\n\n        window.addEventListener(\"keydown\", handleKeyPress);\n        return () => {\n            window.removeEventListener(\"keydown\", handleKeyPress);\n        };\n    }, [addPreferentialPassword, addGeneralPassword, callNextPassword, resetQueues]);\n\n    return (\n        <main id=\"sidebar\">\n            <div id=\"container-senhas\">\n                <img src={logo} alt=\"Logo Reis\" id='sidebar__logo' />\n                <div id=\"container-current\">\n                    <div className=\"label\">SUA VEZ!</div>\n                    <div className=\"password\" id=\"current-password\">{currentPassword}</div>\n                </div>\n            </div>\n\n            <div id=\"bottom-section\">\n                <h1>PRÓXIMAS SENHAS:</h1>\n                <div className=\"bottom-containers\" id=\"container-general\">\n                    <div className=\"bottom-label\">GERAL -</div>\n                    <div className=\"bottom-password\" id=\"next-general\">{nextGeneralPassword}</div>\n                </div>\n\n                <div className=\"bottom-containers\" id=\"container-preferential\">\n                    <div className=\"bottom-label\">PREFERENCIAL -</div>\n                    <div className=\"bottom-password\" id=\"next-preferential\">{nextPreferentialPassword}</div>\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}